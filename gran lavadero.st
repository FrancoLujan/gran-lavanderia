Object subclass: #Lavadero	instanceVariableNames: 'razonSocial ordenesLavado'	classVariableNames: ''	package: 'gran lavadero'!!Lavadero methodsFor: 'creacion, acceso y modificacion' stamp: 'Anonymous 9/17/2023 16:35'!ordenesLavado 	"revisar error raro ya chequeado"	|muestra|	muestra := ''.	ordenesLavado do:[ :i | muestra := muestra ,i asString, String cr ].	^ muestra! !!Lavadero methodsFor: 'creacion, acceso y modificacion' stamp: 'Anonymous 9/12/2023 15:07'!razonSocial	^ razonSocial! !!Lavadero methodsFor: 'creacion, acceso y modificacion' stamp: 'Anonymous 9/12/2023 15:07'!razonSocial: razon	razonSocial := razon ! !!Lavadero methodsFor: 'creacion, acceso y modificacion' stamp: 'Anonymous 9/12/2023 15:06'!initialize 	razonSocial := ''.	ordenesLavado := OrderedCollection new! !!Lavadero methodsFor: 'logica' stamp: 'Anonymous 9/15/2023 19:36'!importeFinalPromedioOrdenesLavado	|sumatoria contador|	sumatoria := 0.	contador := 0.	ordenesLavado do:  [ :i | sumatoria := sumatoria + i calcularImporteFinal .		contador := contador + 1].	^  (sumatoria / contador) ! !!Lavadero methodsFor: 'logica' stamp: 'Anonymous 9/15/2023 19:45'!existeOrdenLavado: numero|bandera|bandera := true.ordenesLavado detect: [ :i | i numeroOrden = numero ] ifNone:[ bandera := false].^ bandera ! !!Lavadero methodsFor: 'logica'!addOrdenLavado: orden	ordenesLavado detect: [ :i | i numeroOrden = orden numeroOrden ] ifNone:[		ordenesLavado add: orden] 	! !!Lavadero methodsFor: 'logica' stamp: 'Anonymous 9/15/2023 19:42'!cantidadOrdenesLavadoAutoBus: desde  hasta: hasta"revisar el viernes chekeado"|contador|	contador := 0.(desde >= 1) & (hasta <= 40) ifTrue: [  	ordenesLavado do: [ :i |  (( i isKindOf: OrdenLavadoAutoBus)  & 		(i numeroOrden >= desde) &  (i numeroOrden <= hasta) ) ifTrue:[ contador := contador + 1 ] ].].^ contador ! !Object subclass: #LavadoCajaCamion	instanceVariableNames: 'anchoCaja largoCaja altoCaja importeBaseLavadoCajaM3'	classVariableNames: ''	package: 'gran lavadero'!!LavadoCajaCamion methodsFor: 'logica' stamp: 'Anonymous 9/15/2023 18:47'!importeFinalLavadoCajaM3	|resultado porcentaje1 porcentaje2|	porcentaje1 := importeBaseLavadoCajaM3 * 0.1.	porcentaje2 := importeBaseLavadoCajaM3 * 0.25.		resultado := 0.	altoCaja <= 0.5 ifTrue: [ resultado := importeBaseLavadoCajaM3  ].		(altoCaja > 0.5) & (altoCaja <= 2) ifTrue: [ resultado :=		importeBaseLavadoCajaM3 + porcentaje1  ].		altoCaja > 2 ifTrue: [resultado := importeBaseLavadoCajaM3 + porcentaje2 ].		^ resultado 		 	! !!LavadoCajaCamion methodsFor: 'logica' stamp: 'Anonymous 9/15/2023 18:51'!calcularImporte	^ self volumen * self importeFinalLavadoCajaM3 	 	! !!LavadoCajaCamion methodsFor: 'logica' stamp: 'Anonymous 9/15/2023 00:01'!volumen	^(altoCaja * anchoCaja * largoCaja) ! !!LavadoCajaCamion methodsFor: 'creacion, acceso y modificacion' stamp: 'Anonymous 9/17/2023 16:15'!importeBaseLavadoCajaM3	^ importeBaseLavadoCajaM3 ! !!LavadoCajaCamion methodsFor: 'creacion, acceso y modificacion' stamp: 'Anonymous 9/15/2023 20:06'!largoCaja: largo	largo >= 1 ifTrue:	[largoCaja := largo.] ! !!LavadoCajaCamion methodsFor: 'creacion, acceso y modificacion' stamp: 'Anonymous 9/17/2023 16:18'!asString 	^ 'caja:',	' ancho:', anchoCaja asString,	' largo:', largoCaja asString,	' alto:', altoCaja asString, 	' importe lavado base por M3:', importeBaseLavadoCajaM3 asString,	' importe final:', self calcularImporte asString! !!LavadoCajaCamion methodsFor: 'creacion, acceso y modificacion' stamp: 'Anonymous 9/14/2023 23:36'!altoCaja "validar"	^ altoCaja ! !!LavadoCajaCamion methodsFor: 'creacion, acceso y modificacion' stamp: 'Anonymous 9/14/2023 23:33'!initialize 	largoCaja := 0.	anchoCaja := 0.	altoCaja := 0.	importeBaseLavadoCajaM3 := 0.! !!LavadoCajaCamion methodsFor: 'creacion, acceso y modificacion' stamp: 'Anonymous 9/15/2023 20:05'!altoCaja: alto	alto >= 1 ifTrue:[altoCaja  := alto.]! !!LavadoCajaCamion methodsFor: 'creacion, acceso y modificacion' stamp: 'Anonymous 9/14/2023 23:34'!anchoCaja	^ anchoCaja ! !!LavadoCajaCamion methodsFor: 'creacion, acceso y modificacion' stamp: 'Anonymous 9/17/2023 16:13'!importeBaseLavadoCajaM3: num	num >= 0 ifTrue:	[importeBaseLavadoCajaM3 := num].! !!LavadoCajaCamion methodsFor: 'creacion, acceso y modificacion' stamp: 'Anonymous 9/15/2023 20:06'!anchoCaja: ancho ancho >= 1 ifTrue: [ anchoCaja :=  ancho. ]! !!LavadoCajaCamion methodsFor: 'creacion, acceso y modificacion' stamp: 'Anonymous 9/14/2023 23:37'!largoCaja	^ largoCaja ! !Object subclass: #OrdenLavado	instanceVariableNames: 'numeroOrden importeLavadoBase'	classVariableNames: ''	package: 'gran lavadero'!!OrdenLavado methodsFor: 'creacion, acceso y modificacion'!numeroOrden: num	numeroOrden := num! !!OrdenLavado methodsFor: 'creacion, acceso y modificacion' stamp: 'Anonymous 9/15/2023 19:48'!importeLavadoBase:importe	importe > 0 ifTrue: [ importeLavadoBase := importe. ]	! !!OrdenLavado methodsFor: 'creacion, acceso y modificacion' stamp: 'Anonymous 9/12/2023 16:15'!numeroOrden 	^numeroOrden ! !!OrdenLavado methodsFor: 'creacion, acceso y modificacion' stamp: 'Anonymous 9/12/2023 16:13'!initialize	numeroOrden := 0.	importeLavadoBase := 0.! !!OrdenLavado methodsFor: 'creacion, acceso y modificacion' stamp: 'Anonymous 9/12/2023 16:17'!calcularImporteFinal	^ importeLavadoBase ! !!OrdenLavado methodsFor: 'asString' stamp: 'Anonymous 9/17/2023 15:49'!asString 	^ ' numero de orden:' , numeroOrden  asString,	 ' importe final:', self calcularImporteFinal  asString.! !OrdenLavado subclass: #OrdenLavadoAutoBus	instanceVariableNames: 'cantidadAsientos importeLavadoPorAsiento'	classVariableNames: ''	package: 'gran lavadero'!!OrdenLavadoAutoBus methodsFor: 'asString' stamp: 'Anonymous 9/17/2023 15:51'!asString 	^ super asString, ' autobus con una cantidad de asientos:', 	cantidadAsientos asString, ' y importe por cada uno:',	 importeLavadoPorAsiento asString! !!OrdenLavadoAutoBus methodsFor: 'logica' stamp: 'Anonymous 9/15/2023 20:03'!calcularImporteFinal 	^ importeLavadoBase  + (importeLavadoPorAsiento  * cantidadAsientos )		! !!OrdenLavadoAutoBus methodsFor: 'creacion, acceso y modificacion' stamp: 'Anonymous 9/15/2023 19:52'!importeLavadoAsiento: importe	importe >= 1 ifTrue: [ importeLavadoPorAsiento := importe  ]! !!OrdenLavadoAutoBus methodsFor: 'creacion, acceso y modificacion' stamp: 'Anonymous 9/15/2023 19:51'!cantidadAsientos: asientos asientos >= 1 ifTrue: [	cantidadAsientos := asientos .  ]! !!OrdenLavadoAutoBus methodsFor: 'creacion, acceso y modificacion' stamp: 'Anonymous 9/14/2023 20:48'!cantidadAsientos	^ cantidadAsientos ! !!OrdenLavadoAutoBus methodsFor: 'creacion, acceso y modificacion' stamp: 'Anonymous 9/13/2023 20:02'!initialize 	super initialize.	cantidadAsientos := 0.	importeLavadoPorAsiento := 0.! !!OrdenLavadoAutoBus methodsFor: 'creacion, acceso y modificacion' stamp: 'Anonymous 9/13/2023 20:22'!importeLavadoAsiento	^ importeLavadoPorAsiento ! !OrdenLavado subclass: #OrdenLavadoCamion	instanceVariableNames: 'importeLavadoCabina importeLavadoChasis lavadoCaja'	classVariableNames: ''	package: 'gran lavadero'!!OrdenLavadoCamion methodsFor: 'creacion, acceso y modificacion' stamp: 'Anonymous 9/15/2023 19:58'!importeLavadoChasis: importe 	importe >= 1 ifTrue: [importeLavadoChasis := importe.]! !!OrdenLavadoCamion methodsFor: 'creacion, acceso y modificacion' stamp: 'Anonymous 9/15/2023 19:45'!lavadoCajaCamion: caja 	lavadoCaja ifNil: [ lavadoCaja := caja 		 ] 		! !!OrdenLavadoCamion methodsFor: 'creacion, acceso y modificacion' stamp: 'Anonymous 9/14/2023 21:28'!importeLavadoCabina	^ importeLavadoCabina ! !!OrdenLavadoCamion methodsFor: 'creacion, acceso y modificacion' stamp: 'Anonymous 9/15/2023 18:21'!initialize	super initialize. 	importeLavadoChasis := 0.	importeLavadoCabina := 0.	lavadoCaja := nil.! !!OrdenLavadoCamion methodsFor: 'creacion, acceso y modificacion' stamp: 'Anonymous 9/14/2023 21:29'!importeLavadoChasis	^ importeLavadoChasis 	! !!OrdenLavadoCamion methodsFor: 'creacion, acceso y modificacion' stamp: 'Anonymous 9/15/2023 19:57'!importeLavadoCabina: importe	importe >= 1 ifTrue: [importeLavadoCabina := importe.]	! !!OrdenLavadoCamion methodsFor: 'logica' stamp: 'Anonymous 9/17/2023 13:35'!asString 	|caja| 	caja := lavadoCaja asString .	lavadoCaja ifNil: [ caja := ' no incluye lavado de caja'].	^ super asString , ' importe lavado cabina:', importeLavadoCabina asString,	' importe lavado chasis:', importeLavadoChasis asString,	' lavado caja:', caja.		! !!OrdenLavadoCamion methodsFor: 'logica' stamp: 'Anonymous 9/17/2023 16:24'!calcularImporteFinal	|resultado| 	resultado := 0.	lavadoCaja ifNil: [ resultado :=  importeLavadoBase + 							importeLavadoChasis + importeLavadoCabina  ].							lavadoCaja ifNotNil: [ resultado := importeLavadoCabina + importeLavadoChasis  + importeLavadoBase  + lavadoCaja calcularImporte   ].	^ resultado 	! !